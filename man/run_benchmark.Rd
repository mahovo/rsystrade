% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/benchmark.R
\name{run_benchmark}
\alias{run_benchmark}
\title{Run benchmark}
\usage{
run_benchmark(
  nrow = 10,
  ncol = 3,
  functions = list(),
  times = 5,
  df = NA,
  elements = "same",
  element = 2
)
}
\arguments{
\item{nrow}{Number of rows in data frame used as input for the function to
be tested.}

\item{ncol}{Number of columns in data frame used as input for the function to
be tested.}

\item{functions}{List of functions to be tested. Each function call is
provided in the list as a character string. (See example)}

\item{times}{Number of times to repeat the test.}

\item{df}{Optional data frame. Default is \code{df = NA}. If \code{df = NA}, a
data frame with the given dimensions will be created where all elements are
\code{element}. If a data frame is provided, the provided dimensions will
ignored, and the dimensions of the data frame will be used.}

\item{elements}{Specify how the elements in the data frame should be generated. Elements
will be generated as one long vector and then wrapped as a matrix, which
is finally turned into a data frame. So the data frame is not defined
row wise or column wise.
\itemize{
\item \code{"same"}: All elements in the df will be the element given by \code{element}.
\item \code{"unif"}: Elements in the df are uniformly distributed.
\item \code{"norm"}: Elements in the df are drawn from a standard normal
distribution.
\item \code{"seq"}: A sequence of integers \verb{1,2,3,...}.
\item \code{"letters"}: A sequence of letters \verb{"a", "b", "c", ...}. Wraps back to
"a" after "z".
}}

\item{element}{Specify the element when \code{elements = "same"}. \code{"element"} may
be an integer, double, character, or any element that a data frame will
accept.}
}
\value{
A tibble of benchmark times.
}
\description{
Run \code{benchmark()} test on one or more functions taking a data frame as input.

By providing different numbers of rows or columns, it is possible to test
the functions sensitivity to each dimension.
It is also possible to provide a single data frame as input for the
function, in which case the provided dimensions will be ignored. However,
this is not the typical use case.
}
\examples{
\dontrun{
f1 <- function() {rnorm(20)}
f2 <- function() {runif(20)}
f_list <- list(f1 = "f1", f2 = "f2")
df_test <- map_df(
  10^(1:2),
  run_benchmark,
  ncol = 3,
  functions = f_list, times = 1
) \%>\% order_graphs()
plot_bm(df_test, "nrow", mean_or_median = median)
}
}
